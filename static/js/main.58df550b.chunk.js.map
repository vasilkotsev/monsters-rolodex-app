{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","console","log","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","e","setState","target","value","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAiBeA,G,YAdF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEd,OADAC,QAAQC,IAAI,kBAEV,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BJ,EAAQK,GAAlC,0BACHC,IAAI,YAEN,6BAAKN,EAAQO,OACb,4BAAIP,EAAQQ,aCGHC,G,MAXE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElB,OADAT,QAAQC,IAAI,sBAEV,qBAAKC,UAAW,YAAhB,SACGO,EAASC,KAAI,SAACX,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCMZO,G,MAZG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEhC,OADAb,QAAQC,IAAI,uBAEV,uBACEC,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BDG,E,4MAnCbC,MAAQ,CACNR,SAAU,GACVS,YAAa,I,EASfL,aAAe,SAACM,GACd,EAAKC,SAAS,CAAEF,YAAaC,EAAEE,OAAOC,S,kEAPnB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEX,SAAUkB,S,+BAQ7C3B,QAAQC,IAAI,iBADL,MAE2B2B,KAAKX,MAA/BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YAEZW,EAAmBpB,EAASqB,QAAO,SAAC/B,GAAD,OACvCA,EAAQO,KAAKyB,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58df550b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nconst Card = ({ monster }) => {\n  console.log(\"Card Component\");\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nconst CardList = ({ monsters }) => {\n  console.log(\"CardList Component\");\n  return (\n    <div className={\"card-list\"}>\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  console.log(\"SearchBox Component\");\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    console.log(\"App Component\");\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}